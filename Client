```
#include<sys/types.h>
#include<sys/socket.h>
#include<netinet/in.h>
#include<arpa/inet.h>
#include<string.h>
#include<stdlib.h>
#include<stdio.h>
#include<unistd.h>

struct sockaddr_in serv_addr;
int skfd, r, w;

unsigned short serv_port = 2500;
char serv_ip[] = "127.0.0.1";
char rbuff[128], sbuff[128];

int main()
{
    bzero(&serv_addr, sizeof(serv_addr));
    serv_addr.sin_family = AF_INET;
    serv_addr.sin_port = htons(serv_port);
    inet_aton(serv_ip, (&serv_addr.sin_addr));

    printf("\nTCP BINARY CALCULATOR CLIENT.\n");

    if((skfd = socket(AF_INET, SOCK_STREAM, 0)) < 0)
    {
        perror("socket error");
        exit(1);
    }

    if(connect(skfd, (struct sockaddr*)&serv_addr, sizeof(serv_addr)) < 0)
    {
        perror("connect error");
        close(skfd);
        exit(1);
    }

    printf("Connected to server.\n");

    while(1)
    {
        printf("\n1. Calculate\n2. Exit\nEnter choice: ");
        int choice;
        scanf("%d", &choice);
        while(getchar() != '\n'); // Clear input buffer

        if(choice == 1)
        {
            printf("Enter binary expression (e.g., 1010+1101): ");
            fgets(sbuff, 128, stdin);
            sbuff[strcspn(sbuff, "\n")] = '\0';

            if(write(skfd, sbuff, strlen(sbuff)+1) < 0)
            {
                printf("Server disconnected\n");
                break;
            }

            r = read(skfd, rbuff, 128);
            if(r <= 0)
            {
                printf("Server kicked you out or disconnected\n");
                break;
            }
            printf("Result: %s\n", rbuff);
        }
        else if(choice == 2)
        {
            write(skfd, "exit", 5);
            printf("Disconnecting from server...\n");
            break;
        }
        else
        {
            printf("Invalid choice\n");
        }
    }

    close(skfd);
    printf("Exiting...\n");
    return 0;
}
```
